
List:-
append() -> Adds an element at the end of the list Syntax:- lst.append(element) # An element of any type (string, number, object etc.) 
clear() -> Removes all the elements from the list Syntax:- lst.clear() 
insert() -> Adds an element at the specified position Syntax:- lst.insert(position, element) 
pop() -> Removes the element at the specified position Syntax:- list.pop(position) 
remove() -> method removes the first occurrence of the element with the specified value. Syntax:- lst.remove(element)
Tuple
count() -> Returns the number of times a specified value occurs in a tuple Syntax:- tple.count(element) 
index() -> Searches the tuple for a specified value and returns the position of where it was found Syntax:- tple.index(element)


Set:-
difference() -> The returned set contains items that exist only in the first set, and not in both sets. Syntax:- set1.difference(set2) 
intersection() -> Returns a set, that is the intersection of two other sets Syntax:- set1.intersection(set2, set3 ... etc) 
isdisjoint() -> Returns whether two sets have a intersection or not Syntax:- set1.isdisjoint(set2) 
issubset() -> Returns whether another set contains this set or not Syntax:- set1.issubset(set2) 
union() -> Return a set containing the union of sets Syntax:- set1.union(set2, set3...)


Dictionary:-
fromkeys() -> Returns a dictionary with the specified keys and value Syntax:- dict.fromkeys(keys, value) #where keys and value are any iterable 
get() -> Returns the value of the specified key Syntax:- dictionary.get(keyname, value) #Optional. A value to return if the specified key does not exist. #Default value None 
items() -> Returns a list containing a tuple for each key value pair Syntax:- dictionary.items() 
keys() -> Returns a list containing the dictionary's keys Syntax:- dictionary.keys() 
values() -> Returns a list of all the values in the dictionary Syntax:- dictionary.values()


String:-
split() -> Splits the string at the specified separator, and returns a list Syntax:- string.split(separator, maxsplit) 
join() -> Joins the elements of an iterable to the end of the string Syntax:- string.join(iterable) 
isidentifier() -> Returns True if the string is an identifier Syntax:- string.isidentifier() 
find() -> Searches the string for a specified value and returns the position of where it was found Syntax:- string.find(value, start, end) 
swapcase() -> Swaps cases, lower case becomes upper case and vice versa Syntax:- string.swapcase() 
title() -> Converts the first character of each word to upper case Syntax:- string.title()
